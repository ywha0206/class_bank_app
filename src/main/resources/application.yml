server:
  port: 8080 # 서버가 사용할 포트 번호 설정
  servlet:
    encoding:
      charset: UTF-8 # 서블릿의 응답과 요청 인코딩을 UTF-8로 설정
      force: true # 요청과 응답에 대해 이 인코딩을 강제로 사용하도록 설정

spring:
  mvc:
    view:
      prefix: /WEB-INF/view # JSP 파일이 위치한 디렉토리 접두사
      suffix: .jsp # 뷰 이름에 자동으로 추가될 파일 확장자 설정 (.jsp)

  servlet:
    multipart:
      max-file-size: 20MB # 업로드할 파일의 최대 크기 (20MB)
      max-request-size: 20MB # 멀티파트 요청의 전체 크기 제한 (20MB)

  datasource:
    # H2 데이터베이스 설정
    url: jdbc:h2:mem:bankdb;MODE=MySQL # H2 인메모리 데이터베이스 사용 (MySQL 모드 활성화)
    driver-class-name: org.h2.Driver # H2 JDBC 드라이버 지정
    username: sa # H2 기본 사용자 이름
    password: '' # H2 기본 비밀번호 (빈 값)

    # MySQL 데이터베이스 설정 (사용하지 않을 경우 주석 처리)
    # url: jdbc:mysql://localhost:3306/mybank?serverTimezone=Asia/Seoul
    # driver-class-name: com.mysql.cj.jdbc.Driver
    # username: root
    # password: asd123

  sql:
    init:
      schema-locations:
        - classpath:db/table.sql # 데이터베이스 테이블 생성 스크립트 위치  classpath: resources 경로까지 자동 설정
      data-locations:
        - classpath:db/data.sql # 초기 데이터 삽입 스크립트 위치

  h2:
    console:
      enabled: true # H2 데이터베이스 콘솔 활성화 (http://localhost:8080/h2-console 접속 가능)

  output:
    ansi:
      enabled: always # 콘솔 출력에 ANSI 색상 코드 사용 가능하도록 설정

# MyBatis 설정
mybatis:
  mapper-locations:
    - classpath:mapper/**/*.xml # MyBatis 매퍼 파일 경로 설정 (모든 XML 매퍼 파일 포함)
  configuration:
    map-underscore-to-camel-case: true # 데이터베이스의 언더스코어 네이밍을 카멜 케이스로 자동 매핑
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # MyBatis SQL 로그를 콘솔에 출력

# 로깅 설정
logging:
  level:
    org.apache.ibatis: DEBUG # MyBatis SQL 실행 로그를 DEBUG 레벨로 출력


# 사용자 정의 설정
tenco:
  key: 54d5cb2d332dbdb4850293caae4559ce88b65163f1ea5d4e4b3ac49d772ded14 # (API 키 예제, 실제 사용 시 보안에 주의)
